---
apiVersion: v1
kind: Namespace
metadata:
  name: rhacm-monitor
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rhacm-monitor
  namespace: rhacm-monitor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rhacm-monitor
rules:
- apiGroups: [""]
  resources: ["nodes", "secrets", "namespaces"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "create", "delete"]
- apiGroups: ["cluster.open-cluster-management.io"]
  resources: ["managedclusters"]
  verbs: ["get", "list"]
- apiGroups: ["policy.open-cluster-management.io"]
  resources: ["policies"]
  verbs: ["get", "list"]
- apiGroups: ["operators.coreos.com"]
  resources: ["clusterserviceversions"]
  verbs: ["get", "list"]
- apiGroups: ["metal3.io"]
  resources: ["baremetalhosts"]
  verbs: ["get", "list"]
- apiGroups: ["route.openshift.io"]
  resources: ["routes"]
  verbs: ["get", "list"]
- apiGroups: ["config.openshift.io"]
  resources: ["clusterversions"]
  verbs: ["get", "list"]
- apiGroups: ["ran.openshift.io"]
  resources: ["clustergroupupgrades"]
  verbs: ["get", "list", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rhacm-monitor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rhacm-monitor
subjects:
- kind: ServiceAccount
  name: rhacm-monitor
  namespace: rhacm-monitor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rhacm-monitor-backend
  namespace: rhacm-monitor
  labels:
    app: rhacm-monitor
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rhacm-monitor
      component: backend
  template:
    metadata:
      labels:
        app: rhacm-monitor
        component: backend
    spec:
      serviceAccountName: rhacm-monitor
      containers:
      - name: rhacm-monitor-backend
        image: quay.io/bzhai/rhacm-monitor-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: PORT
          value: "8080"
        - name: ENABLE_AUTH
          value: "false"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /api/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: rhacm-monitor-backend
  namespace: rhacm-monitor
  labels:
    app: rhacm-monitor
    component: backend
spec:
  selector:
    app: rhacm-monitor
    component: backend
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: rhacm-monitor
data:
  nginx.conf: |
    error_log /tmp/error.log;
    pid /tmp/nginx.pid;
    
    events {}
    
    http {
        client_body_temp_path /tmp/client_body;
        proxy_temp_path /tmp/proxy;
        fastcgi_temp_path /tmp/fastcgi;
        uwsgi_temp_path /tmp/uwsgi;
        scgi_temp_path /tmp/scgi;
        
        server {
            listen 8080;
            
            location / {
                root /opt/app-root/src;
                index index.html;
                try_files $uri $uri/ /index.html;
            }
            
            location /api/ {
                proxy_pass http://rhacm-monitor-backend:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rhacm-monitor-proxy
  namespace: rhacm-monitor
  labels:
    app: rhacm-monitor
    component: proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rhacm-monitor
      component: proxy
  template:
    metadata:
      labels:
        app: rhacm-monitor
        component: proxy
    spec:
      containers:
      - name: nginx
        image: registry.access.redhat.com/ubi9/nginx-120:latest
        command: ["nginx", "-g", "daemon off;"]
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: html
          mountPath: /opt/app-root/src
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: html
        configMap:
          name: frontend-html
      - name: nginx-conf
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: rhacm-monitor-frontend
  namespace: rhacm-monitor
  labels:
    app: rhacm-monitor
    component: proxy
spec:
  selector:
    app: rhacm-monitor
    component: proxy
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: hubs
  namespace: rhacm-monitor
  labels:
    app: rhacm-monitor
spec:
  host: hubs-rhacm-monitor.apps.vhub.outbound.vz.bos2.lab
  to:
    kind: Service
    name: rhacm-monitor-frontend
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None

